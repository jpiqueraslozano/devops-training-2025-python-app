pipeline {
    agent any

    environment {
        SONARQUBE_ENV = 'sonarqube-devops' // Cambia esto si tu servidor Sonar tiene otro nombre
    }

    stages {

        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Install dependencies and test') {
            agent {
                docker {
                    image 'python:3.11-slim'
                }
            }
            steps {
                sh '''
                    pip install --upgrade pip
                    pip install -r requirements.txt
                    pytest --junitxml=results.xml
                '''
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv("${SONARQUBE_ENV}") {
                    sh '''
                        sonar-scanner \
                        -Dsonar.projectKey=python-example \
                        -Dsonar.sources=. \
                        -Dsonar.host.url=$SONAR_HOST_URL \
                        -Dsonar.login=$SONAR_AUTH_TOKEN
                    '''
                }
            }
        }

    }

    post {
        always {
            junit 'results.xml'
        }
        success {
            echo "Pipeline ejecutada correctamente ✅"
        }
        failure {
            echo "La pipeline ha fallado ❌"
        }
    }
}
